import React, { useEffect, useState } from 'react';
import { View, Text, FlatList, TouchableOpacity, StyleSheet, TextInput, Button, Alert } from 'react-native';
import { useAuth } from '../../Context'; // Importa el contexto de autenticación
import { SafeAreaView } from 'react-native-safe-area-context';
import DateTimePicker from '@react-native-community/datetimepicker';

const SolicitarJustificante = () => {
  const { userData, token } = useAuth();
  const [motivo, setMotivo] = useState('');
  const [diaJustificar, setDiaJustificar] = useState(new Date());
  const [showDatePicker, setShowDatePicker] = useState(false);
  const [mensaje, setMensaje] = useState('');

  const handleFechaChange = (event, selectedDate) => {
    setShowDatePicker(false);
    if (selectedDate) setDiaJustificar(selectedDate);
  };

  const handleSubmit = async () => {
    try {
      const response = await fetch('http://127.0.0.1:8000/api/v1/solicitudes/', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${token}`
        },
        body: JSON.stringify({
          estado_solicitud: 'P',
          motivo: motivo,
          dia_justificar: diaJustificar.toISOString().split('T')[0], // formato YYYY-MM-DD
          clave_empleado: userData.clave_empleado,
          usuario_que_registra: userData.id
        })
      });

      if (response.ok) {
        setMensaje('Solicitud creada correctamente');
        setMotivo('');
        setDiaJustificar(new Date());
      } else {
        const errorData = await response.json();
        Alert.alert('Error', `Error al crear la solicitud: ${errorData.message || 'Error desconocido'}`);
      }
    } catch (error) {
      Alert.alert('Error', 'Hubo un problema al crear la solicitud');
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.label}>Motivo de la solicitud</Text>
      <TextInput
        style={styles.input}
        placeholder="Ingrese el motivo"
        value={motivo}
        onChangeText={setMotivo}
        maxLength={150}
      />

      <Text style={styles.label}>Día a justificar</Text>
      <TouchableOpacity onPress={() => setShowDatePicker(true)} style={styles.dateButton}>
        <Text style={styles.dateText}>{diaJustificar.toISOString().split('T')[0]}</Text>
      </TouchableOpacity>
      {showDatePicker && (
        <DateTimePicker
          value={diaJustificar}
          mode="date"
          display="default"
          onChange={handleFechaChange}
          minimumDate={new Date()} // para no permitir fechas pasadas
        />
      )}

      <TouchableOpacity onPress={handleSubmit} style={styles.submitButton}>
        <Text style={styles.submitButtonText}>Enviar solicitud</Text>
      </TouchableOpacity>

      {mensaje ? <Text style={styles.mensaje}>{mensaje}</Text> : null}
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
    backgroundColor: '#e8ecf4',
  },
  label: {
    fontSize: 16,
    marginBottom: 5,
    fontWeight: 'bold',
  },
  input: {
    height: 40,
    borderColor: '#ccc',
    borderWidth: 1,
    padding: 10,
    borderRadius: 5,
    marginBottom: 20,
    backgroundColor: '#fff',
  },
  dateButton: {
    height: 40,
    justifyContent: 'center',
    alignItems: 'center',
    borderColor: '#ccc',
    borderWidth: 1,
    borderRadius: 5,
    marginBottom: 20,
    backgroundColor: '#fff',
  },
  dateText: {
    fontSize: 16,
  },
  submitButton: {
    backgroundColor: '#4CAF50',
    padding: 15,
    borderRadius: 5,
    alignItems: 'center',
  },
  submitButtonText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: 'bold',
  },
  mensaje: {
    marginTop: 20,
    fontSize: 16,
    color: 'green',
    fontWeight: 'bold',
    textAlign: 'center',
  },
});

export default SolicitarJustificante;
